{
  "contractName": "OGSale",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimCnts",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "maxSaleCnt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "merkleRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "nftContract",
      "outputs": [
        {
          "internalType": "contract INordiaForFuture",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_merkleRoot",
          "type": "bytes32"
        }
      ],
      "name": "setMerkleRoot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "setNFTContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "claimNft",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimCnts\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claimNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSaleCnt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"contract INordiaForFuture\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"setNFTContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/OGSale.sol\":\"OGSale\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x596ed72a251d391b814a4aa19d7acb02ebdcc92ba27d3fff74a6f0c158b12ab7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5f49013d50b1011c842f76e96f3c3f146ca7cb15084c8805575e0e0e1a5c700\",\"dweb:/ipfs/QmQ3n5qiuioUA74heD6ZddNkYg1kYihjQBNcy9zgwYXKgM\"]},\"project:/contracts/INordiaForFuture.sol\":{\"keccak256\":\"0x1abad8cfa0209d9693147c870a23a2d7718fa0043e508241011b2f56c1a672e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e18d2149e74308e3dd502819eef0e9fd1c95dbe1978382dbcec8099809fbaa0\",\"dweb:/ipfs/QmUjUN3TMfUK4Vdqga9fXiVEU6q7t3Vqitx37NftA9aCA6\"]},\"project:/contracts/OGSale.sol\":{\"keccak256\":\"0x1ea1b0d656eb06d4c155b447a7ec3a32bb2bc6bcbf04ba9485c46b20c28d08d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff768a3f04b26d667938a34edef9308d6b9a253db9b998cd17293f3b577251fd\",\"dweb:/ipfs/QmeVnAe5UAADUDjQLuJXboHGUt9aTkjkBvQwFasR4LYpqA\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108a68061007e6000396000f3fe6080604052600436106100a05760003560e01c80638da5cb5b116100645780638da5cb5b14610137578063a5a96d0014610169578063a7ccabdf1461017c578063d56d229d1461019c578063ed47ef50146101bc578063f2fde38b146101fe57600080fd5b8063082b9a97146100ac5780632eb4a7ab146100d55780634e71d92d146100eb578063715018a6146101025780637cb647591461011757600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100c26107d081565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506100c260015481565b3480156100f757600080fd5b5061010061021e565b005b34801561010e57600080fd5b50610100610273565b34801561012357600080fd5b506101006101323660046107d7565b610287565b34801561014357600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100cc565b610100610177366004610762565b610294565b34801561018857600080fd5b50610100610197366004610739565b610557565b3480156101a857600080fd5b50600254610151906001600160a01b031681565b3480156101c857600080fd5b506101ec6101d7366004610739565b60036020526000908152604090205460ff1681565b60405160ff90911681526020016100cc565b34801561020a57600080fd5b50610100610219366004610739565b610581565b6102266105fa565b604051600090339047908381818185875af1925050503d8060008114610268576040519150601f19603f3d011682016040523d82523d6000602084013e61026d565b606091505b50505050565b61027b6105fa565b6102856000610654565b565b61028f6105fa565b600155565b600254604080516318160ddd60e01b815290516107d0926001600160a01b0316916318160ddd916004808301926020929190829003018186803b1580156102da57600080fd5b505afa1580156102ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031291906107f0565b106103515760405162461bcd60e51b815260206004820152600a60248201526914d85b1948195b99195960b21b60448201526064015b60405180910390fd5b33600090815260036020526040902054600260ff909116106103b55760405162461bcd60e51b815260206004820181905260248201527f4f6e6c792032206e66747320617661696c61626c65207065722077616c6c65746044820152606401610348565b3467010a741a46278000146103fd5760405162461bcd60e51b815260206004820152600e60248201526d09cdee840cadcdeeaced040cae8d60931b6044820152606401610348565b6040516bffffffffffffffffffffffff193360601b1660208201526000906034016040516020818303038152906040528051906020012090506104778383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060015491508490506106a4565b6104b35760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b6044820152606401610348565b336000908152600360205260408120805460ff16916104d183610824565b825460ff9182166101009390930a9283029190920219909116179055506002546040516340c10f1960e01b8152336004820152600160248201526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561053a57600080fd5b505af115801561054e573d6000803e3d6000fd5b50505050505050565b61055f6105fa565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6105896105fa565b6001600160a01b0381166105ee5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610348565b6105f781610654565b50565b6000546001600160a01b031633146102855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610348565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000826106b185846106ba565b14949350505050565b600081815b84518110156106ff576106eb828683815181106106de576106de61085a565b6020026020010151610707565b9150806106f781610809565b9150506106bf565b509392505050565b6000818310610723576000828152602084905260409020610732565b60008381526020839052604090205b9392505050565b60006020828403121561074b57600080fd5b81356001600160a01b038116811461073257600080fd5b6000806020838503121561077557600080fd5b823567ffffffffffffffff8082111561078d57600080fd5b818501915085601f8301126107a157600080fd5b8135818111156107b057600080fd5b8660208260051b85010111156107c557600080fd5b60209290920196919550909350505050565b6000602082840312156107e957600080fd5b5035919050565b60006020828403121561080257600080fd5b5051919050565b600060001982141561081d5761081d610844565b5060010190565b600060ff821660ff81141561083b5761083b610844565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220625fdbe4b8d997aac351eaa54ab7921cf133dcabb3ffac26ab52b2b4c33b56cd64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100a05760003560e01c80638da5cb5b116100645780638da5cb5b14610137578063a5a96d0014610169578063a7ccabdf1461017c578063d56d229d1461019c578063ed47ef50146101bc578063f2fde38b146101fe57600080fd5b8063082b9a97146100ac5780632eb4a7ab146100d55780634e71d92d146100eb578063715018a6146101025780637cb647591461011757600080fd5b366100a757005b600080fd5b3480156100b857600080fd5b506100c26107d081565b6040519081526020015b60405180910390f35b3480156100e157600080fd5b506100c260015481565b3480156100f757600080fd5b5061010061021e565b005b34801561010e57600080fd5b50610100610273565b34801561012357600080fd5b506101006101323660046107d7565b610287565b34801561014357600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100cc565b610100610177366004610762565b610294565b34801561018857600080fd5b50610100610197366004610739565b610557565b3480156101a857600080fd5b50600254610151906001600160a01b031681565b3480156101c857600080fd5b506101ec6101d7366004610739565b60036020526000908152604090205460ff1681565b60405160ff90911681526020016100cc565b34801561020a57600080fd5b50610100610219366004610739565b610581565b6102266105fa565b604051600090339047908381818185875af1925050503d8060008114610268576040519150601f19603f3d011682016040523d82523d6000602084013e61026d565b606091505b50505050565b61027b6105fa565b6102856000610654565b565b61028f6105fa565b600155565b600254604080516318160ddd60e01b815290516107d0926001600160a01b0316916318160ddd916004808301926020929190829003018186803b1580156102da57600080fd5b505afa1580156102ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031291906107f0565b106103515760405162461bcd60e51b815260206004820152600a60248201526914d85b1948195b99195960b21b60448201526064015b60405180910390fd5b33600090815260036020526040902054600260ff909116106103b55760405162461bcd60e51b815260206004820181905260248201527f4f6e6c792032206e66747320617661696c61626c65207065722077616c6c65746044820152606401610348565b3467010a741a46278000146103fd5760405162461bcd60e51b815260206004820152600e60248201526d09cdee840cadcdeeaced040cae8d60931b6044820152606401610348565b6040516bffffffffffffffffffffffff193360601b1660208201526000906034016040516020818303038152906040528051906020012090506104778383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060015491508490506106a4565b6104b35760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b6044820152606401610348565b336000908152600360205260408120805460ff16916104d183610824565b825460ff9182166101009390930a9283029190920219909116179055506002546040516340c10f1960e01b8152336004820152600160248201526001600160a01b03909116906340c10f1990604401600060405180830381600087803b15801561053a57600080fd5b505af115801561054e573d6000803e3d6000fd5b50505050505050565b61055f6105fa565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6105896105fa565b6001600160a01b0381166105ee5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610348565b6105f781610654565b50565b6000546001600160a01b031633146102855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610348565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000826106b185846106ba565b14949350505050565b600081815b84518110156106ff576106eb828683815181106106de576106de61085a565b6020026020010151610707565b9150806106f781610809565b9150506106bf565b509392505050565b6000818310610723576000828152602084905260409020610732565b60008381526020839052604090205b9392505050565b60006020828403121561074b57600080fd5b81356001600160a01b038116811461073257600080fd5b6000806020838503121561077557600080fd5b823567ffffffffffffffff8082111561078d57600080fd5b818501915085601f8301126107a157600080fd5b8135818111156107b057600080fd5b8660208260051b85010111156107c557600080fd5b60209290920196919550909350505050565b6000602082840312156107e957600080fd5b5035919050565b60006020828403121561080257600080fd5b5051919050565b600060001982141561081d5761081d610844565b5060010190565b600060ff821660ff81141561083b5761083b610844565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220625fdbe4b8d997aac351eaa54ab7921cf133dcabb3ffac26ab52b2b4c33b56cd64736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5758:14",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:14",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:14"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:14"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:14"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:14"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:14",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:14",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:14"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:14"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:14",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:14"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:14"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:14"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:14",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:14"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:14",
                "type": ""
              }
            ],
            "src": "14:286:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "410:510:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "456:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "465:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "468:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "458:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "458:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "458:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "431:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "440:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "427:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "427:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "452:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "423:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "423:32:14"
                  },
                  "nodeType": "YulIf",
                  "src": "420:52:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "481:37:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "508:9:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "495:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:23:14"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "485:6:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "527:28:14",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "537:18:14",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "531:2:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "582:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "591:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "594:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "584:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "584:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "584:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "570:6:14"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "578:2:14"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "567:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "567:14:14"
                  },
                  "nodeType": "YulIf",
                  "src": "564:34:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "607:32:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "621:9:14"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "632:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "617:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "617:22:14"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "611:2:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "687:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "696:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "699:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "689:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "689:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "689:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "666:2:14"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "670:4:14",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "662:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "662:13:14"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "677:7:14"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "658:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "658:27:14"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "651:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "651:35:14"
                  },
                  "nodeType": "YulIf",
                  "src": "648:55:14"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "712:30:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "739:2:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "726:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "726:16:14"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "716:6:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "769:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "778:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "781:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "771:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "771:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "771:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "757:6:14"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "765:2:14"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "754:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "754:14:14"
                  },
                  "nodeType": "YulIf",
                  "src": "751:34:14"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "843:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "852:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "855:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "845:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "845:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "845:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "808:2:14"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "816:1:14",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "819:6:14"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "812:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "812:14:14"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "804:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "804:23:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "829:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "800:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "800:32:14"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "834:7:14"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "797:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "797:45:14"
                  },
                  "nodeType": "YulIf",
                  "src": "794:65:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "868:21:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "882:2:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "886:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "878:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "878:11:14"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "868:6:14"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "898:16:14",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "908:6:14"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "898:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "368:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "379:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "391:6:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "399:6:14",
                "type": ""
              }
            ],
            "src": "305:615:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "995:110:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1041:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1050:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1053:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1043:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1043:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1043:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1016:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1025:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1012:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1012:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1037:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1008:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1008:32:14"
                  },
                  "nodeType": "YulIf",
                  "src": "1005:52:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1066:33:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1089:9:14"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1076:12:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1076:23:14"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1066:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "961:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "972:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "984:6:14",
                "type": ""
              }
            ],
            "src": "925:180:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1191:103:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1237:16:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1246:1:14",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1249:1:14",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1239:6:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1239:12:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1239:12:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1212:7:14"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1221:9:14"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1208:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1208:23:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1233:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1204:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1204:32:14"
                  },
                  "nodeType": "YulIf",
                  "src": "1201:52:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1262:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1278:9:14"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1272:5:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1272:16:14"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1262:6:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1157:9:14",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1168:7:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1180:6:14",
                "type": ""
              }
            ],
            "src": "1110:184:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1418:110:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1435:3:14"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1448:2:14",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1452:6:14"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1444:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1444:15:14"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1465:26:14",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "1461:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1461:31:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1440:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1440:53:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1428:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1428:66:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1428:66:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1503:19:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1514:3:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1519:2:14",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1510:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1510:12:14"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1503:3:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1394:3:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1399:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1410:3:14",
                "type": ""
              }
            ],
            "src": "1299:229:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1724:14:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1726:10:14",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "1733:3:14"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1726:3:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1708:3:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1716:3:14",
                "type": ""
              }
            ],
            "src": "1533:205:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1844:102:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1854:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1866:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1877:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1862:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1862:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1854:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1896:9:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1911:6:14"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1927:3:14",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1932:1:14",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1923:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1923:11:14"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1936:1:14",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1919:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1919:19:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1907:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1907:32:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1889:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1889:51:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1889:51:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1813:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1824:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1835:4:14",
                "type": ""
              }
            ],
            "src": "1743:203:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2088:145:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2098:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2110:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2121:2:14",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2106:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2106:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2098:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2140:9:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2155:6:14"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2171:3:14",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2176:1:14",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2167:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2167:11:14"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2180:1:14",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2163:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2163:19:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2151:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2151:32:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2133:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2133:51:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2133:51:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2204:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2215:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2200:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2200:18:14"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2220:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2193:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2193:34:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2193:34:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_rational_1_by_1__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2049:9:14",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2060:6:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2068:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2079:4:14",
                "type": ""
              }
            ],
            "src": "1951:282:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2339:76:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2349:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2361:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2372:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2357:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2357:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2349:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2391:9:14"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2402:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2384:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2384:25:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2384:25:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2308:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2319:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2330:4:14",
                "type": ""
              }
            ],
            "src": "2238:177:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2546:102:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2556:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2568:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2579:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2564:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2564:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2556:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2598:9:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2613:6:14"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2629:3:14",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2634:1:14",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2625:3:14"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2625:11:14"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2638:1:14",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2621:3:14"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2621:19:14"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2609:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2609:32:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2591:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2591:51:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2591:51:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_INordiaForFuture_$3154__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2515:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2526:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2537:4:14",
                "type": ""
              }
            ],
            "src": "2420:228:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2827:228:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2844:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2855:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2837:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2837:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2837:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2878:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2889:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2874:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2874:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2894:2:14",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2867:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2867:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2867:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2917:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2928:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2913:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2913:18:14"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2933:34:14",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2906:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2906:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2906:62:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2988:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2999:2:14",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2984:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2984:18:14"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3004:8:14",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2977:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2977:36:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2977:36:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3022:27:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3034:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3045:3:14",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3030:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3030:19:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3022:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2804:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2818:4:14",
                "type": ""
              }
            ],
            "src": "2653:402:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3234:164:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3251:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3262:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3244:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3244:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3244:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3285:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3296:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3281:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3281:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3301:2:14",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3274:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3274:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3274:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3324:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3335:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3320:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3320:18:14"
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820657468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3340:16:14",
                        "type": "",
                        "value": "Not enough eth"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3313:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3313:44:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3313:44:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3366:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3378:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3389:2:14",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3374:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3374:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3366:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5d96abdcb6718598615af5856d39e67f33acef28010b2252b4f055b6cfebd761__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3211:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3225:4:14",
                "type": ""
              }
            ],
            "src": "3060:338:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3577:182:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3594:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3605:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3587:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3587:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3587:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3628:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3639:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3624:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3624:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3644:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3617:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3617:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3617:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3667:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3678:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3663:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3663:18:14"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3683:34:14",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3656:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3656:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3656:62:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3727:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3739:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3750:2:14",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3735:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3735:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3727:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3554:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3568:4:14",
                "type": ""
              }
            ],
            "src": "3403:356:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3938:160:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3955:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3966:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3948:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3948:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3948:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3989:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4000:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3985:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3985:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4005:2:14",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3978:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3978:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3978:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4028:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4039:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4024:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4024:18:14"
                      },
                      {
                        "hexValue": "53616c6520656e646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4044:12:14",
                        "type": "",
                        "value": "Sale ended"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4017:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4017:40:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4017:40:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4066:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4078:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4089:2:14",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4074:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4074:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4066:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b036694915d381e2a28fde2d675c29ae068907f000a010baf2c383f04c632766__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3915:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3929:4:14",
                "type": ""
              }
            ],
            "src": "3764:334:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4277:182:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4294:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4305:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4287:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4287:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4287:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4328:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4339:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4324:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4324:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4344:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4317:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4317:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4317:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4367:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4378:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4363:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4363:18:14"
                      },
                      {
                        "hexValue": "4f6e6c792032206e66747320617661696c61626c65207065722077616c6c6574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4383:34:14",
                        "type": "",
                        "value": "Only 2 nfts available per wallet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4356:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4356:62:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4356:62:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4427:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4439:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4450:2:14",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4435:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4435:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4427:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d64f1b4388cc5526fe9f22947da24732c56df9e0147c10c0b6e9a1c7036a2b1a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4254:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4268:4:14",
                "type": ""
              }
            ],
            "src": "4103:356:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4638:163:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4655:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4666:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4648:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4648:21:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4648:21:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4689:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4700:2:14",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4685:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4685:18:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4705:2:14",
                        "type": "",
                        "value": "13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4678:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4678:30:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4678:30:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4728:9:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4739:2:14",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4724:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4724:18:14"
                      },
                      {
                        "hexValue": "496e76616c69642070726f6f66",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4744:15:14",
                        "type": "",
                        "value": "Invalid proof"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4717:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4717:43:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4717:43:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4769:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4781:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4792:2:14",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4777:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4777:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4769:4:14"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4615:9:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4629:4:14",
                "type": ""
              }
            ],
            "src": "4464:337:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4907:76:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4917:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4929:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4940:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4925:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4925:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4917:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4959:9:14"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4970:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4952:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4952:25:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4952:25:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4876:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4887:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4898:4:14",
                "type": ""
              }
            ],
            "src": "4806:177:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5085:87:14",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5095:26:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5107:9:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5118:2:14",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5103:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5103:18:14"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5095:4:14"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5137:9:14"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5152:6:14"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5160:4:14",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5148:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5148:17:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5130:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5130:36:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5130:36:14"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5054:9:14",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5065:6:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5076:4:14",
                "type": ""
              }
            ],
            "src": "4988:184:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5224:88:14",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5255:22:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5257:16:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5257:18:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5257:18:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5240:5:14"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5251:1:14",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5247:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5247:6:14"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5237:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5237:17:14"
                  },
                  "nodeType": "YulIf",
                  "src": "5234:43:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5286:20:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5297:5:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5304:1:14",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5293:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5293:13:14"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "5286:3:14"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5206:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "5216:3:14",
                "type": ""
              }
            ],
            "src": "5177:135:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5362:130:14",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5372:31:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5391:5:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5398:4:14",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5387:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5387:16:14"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "5376:7:14",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5433:22:14",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5435:16:14"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5435:18:14"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5435:18:14"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "5418:7:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5427:4:14",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "5415:2:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5415:17:14"
                  },
                  "nodeType": "YulIf",
                  "src": "5412:43:14"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5464:22:14",
                  "value": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "5475:7:14"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5484:1:14",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5471:3:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5471:15:14"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "5464:3:14"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5344:5:14",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "5354:3:14",
                "type": ""
              }
            ],
            "src": "5317:175:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5529:95:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5546:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5553:3:14",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5558:10:14",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5549:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5549:20:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5539:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5539:31:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5539:31:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5586:1:14",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5589:4:14",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5579:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5579:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5579:15:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5610:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5613:4:14",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5603:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5603:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5603:15:14"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5497:127:14"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5661:95:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5678:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5685:3:14",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5690:10:14",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5681:3:14"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5681:20:14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5671:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5671:31:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5671:31:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5718:1:14",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5721:4:14",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5711:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5711:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5711:15:14"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5742:1:14",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5745:4:14",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5735:6:14"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5735:15:14"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5735:15:14"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "5629:127:14"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 20)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_rational_1_by_1__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_INordiaForFuture_$3154__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5d96abdcb6718598615af5856d39e67f33acef28010b2252b4f055b6cfebd761__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not enough eth\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b036694915d381e2a28fde2d675c29ae068907f000a010baf2c383f04c632766__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Sale ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d64f1b4388cc5526fe9f22947da24732c56df9e0147c10c0b6e9a1c7036a2b1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Only 2 nfts available per wallet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Invalid proof\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n}",
      "id": 14,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "273:1208:13:-:0;;;500:24;;;;;;;;;-1:-1:-1;936:32:2;719:10:3;936:18:2;:32::i;:::-;273:1208:13;;2433:187:2;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:2;;;-1:-1:-1;;;;;;2541:17:2;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;273:1208:13:-;;;;;;;",
  "deployedSourceMap": "273:1208:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;452:41;;;;;;;;;;;;489:4;452:41;;;;;2384:25:14;;;2372:2;2357:18;452:41:13;;;;;;;;322:25;;;;;;;;;;;;;;;;1326:150;;;;;;;;;;;;;:::i;:::-;;1831:101:2;;;;;;;;;;;;;:::i;566:106:13:-;;;;;;;;;;-1:-1:-1;566:106:13;;;;;:::i;:::-;;:::i;1201:85:2:-;;;;;;;;;;-1:-1:-1;1247:7:2;1273:6;-1:-1:-1;;;;;1273:6:2;1201:85;;;-1:-1:-1;;;;;1907:32:14;;;1889:51;;1877:2;1862:18;1201:85:2;1743:203:14;804:514:13;;;;;;:::i;:::-;;:::i;678:118::-;;;;;;;;;;-1:-1:-1;678:118:13;;;;;:::i;:::-;;:::i;354:35::-;;;;;;;;;;-1:-1:-1;354:35:13;;;;-1:-1:-1;;;;;354:35:13;;;402:42;;;;;;;;;;-1:-1:-1;402:42:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5160:4:14;5148:17;;;5130:36;;5118:2;5103:18;402:42:13;4988:184:14;2081:198:2;;;;;;;;;;-1:-1:-1;2081:198:2;;;;;:::i;:::-;;:::i;1326:150:13:-;1094:13:2;:11;:13::i;:::-;1392:58:13::1;::::0;1374:12:::1;::::0;1400:10:::1;::::0;1424:21:::1;::::0;1374:12;1392:58;1374:12;1392:58;1424:21;1400:10;1392:58:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;1326:150:13:o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;566:106:13:-;1094:13:2;:11;:13::i;:::-;640:10:13::1;:24:::0;566:106::o;804:514::-;891:11;;:25;;;-1:-1:-1;;;891:25:13;;;;919:4;;-1:-1:-1;;;;;891:11:13;;:23;;:25;;;;;;;;;;;;;;:11;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:32;883:55;;;;-1:-1:-1;;;883:55:13;;3966:2:14;883:55:13;;;3948:21:14;4005:2;3985:18;;;3978:30;-1:-1:-1;;;4024:18:14;;;4017:40;4074:18;;883:55:13;;;;;;;;;967:10;957:21;;;;:9;:21;;;;;;981:1;957:21;;;;:25;949:70;;;;-1:-1:-1;;;949:70:13;;4305:2:14;949:70:13;;;4287:21:14;;;4324:18;;;4317:30;4383:34;4363:18;;;4356:62;4435:18;;949:70:13;4103:356:14;949:70:13;1038:9;1051:11;1038:24;1030:51;;;;-1:-1:-1;;;1030:51:13;;3262:2:14;1030:51:13;;;3244:21:14;3301:2;3281:18;;;3274:30;-1:-1:-1;;;3320:18:14;;;3313:44;3374:18;;1030:51:13;3060:338:14;1030:51:13;1117:28;;-1:-1:-1;;1134:10:13;1448:2:14;1444:15;1440:53;1117:28:13;;;1428:66:14;1092:12:13;;1510::14;;1117:28:13;;;;;;;;;;;;1107:39;;;;;;1092:54;;1165:50;1184:12;;1165:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1198:10:13;;;-1:-1:-1;1210:4:13;;-1:-1:-1;1165:18:13;:50::i;:::-;1157:76;;;;-1:-1:-1;;;1157:76:13;;4666:2:14;1157:76:13;;;4648:21:14;4705:2;4685:18;;;4678:30;-1:-1:-1;;;4724:18:14;;;4717:43;4777:18;;1157:76:13;4464:337:14;1157:76:13;1254:10;1244:21;;;;:9;:21;;;;;:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1279:11:13;;:31;;-1:-1:-1;;;1279:31:13;;1296:10;1279:31;;;2133:51:14;-1:-1:-1;2200:18:14;;;2193:34;-1:-1:-1;;;;;1279:11:13;;;;:16;;2106:18:14;;1279:31:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;872:446;804:514;;:::o;678:118::-;1094:13:2;:11;:13::i;:::-;749:11:13::1;:39:::0;;-1:-1:-1;;;;;;749:39:13::1;-1:-1:-1::0;;;;;749:39:13;;;::::1;::::0;;;::::1;::::0;;678:118::o;2081:198:2:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:2;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:2;;2855:2:14;2161:73:2::1;::::0;::::1;2837:21:14::0;2894:2;2874:18;;;2867:30;2933:34;2913:18;;;2906:62;-1:-1:-1;;;2984:18:14;;;2977:36;3030:19;;2161:73:2::1;2653:402:14::0;2161:73:2::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:2;719:10:3;1422:23:2;1414:68;;;;-1:-1:-1;;;1414:68:2;;3605:2:14;1414:68:2;;;3587:21:14;;;3624:18;;;3617:30;3683:34;3663:18;;;3656:62;3735:18;;1414:68:2;3403:356:14;2433:187:2;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:2;;;-1:-1:-1;;;;;;2541:17:2;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1153:184:5:-;1274:4;1326;1297:25;1310:5;1317:4;1297:12;:25::i;:::-;:33;;1153:184;-1:-1:-1;;;;1153:184:5:o;1991:290::-;2074:7;2116:4;2074:7;2130:116;2154:5;:12;2150:1;:16;2130:116;;;2202:33;2212:12;2226:5;2232:1;2226:8;;;;;;;;:::i;:::-;;;;;;;2202:9;:33::i;:::-;2187:48;-1:-1:-1;2168:3:5;;;;:::i;:::-;;;;2130:116;;;-1:-1:-1;2262:12:5;1991:290;-1:-1:-1;;;1991:290:5:o;8054:147::-;8117:7;8147:1;8143;:5;:51;;8275:13;8366:15;;;8401:4;8394:15;;;8447:4;8431:21;;8143:51;;;8275:13;8366:15;;;8401:4;8394:15;;;8447:4;8431:21;;8151:20;8136:58;8054:147;-1:-1:-1;;;8054:147:5:o;14:286:14:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:14;;210:42;;200:70;;266:1;263;256:12;305:615;391:6;399;452:2;440:9;431:7;427:23;423:32;420:52;;;468:1;465;458:12;420:52;508:9;495:23;537:18;578:2;570:6;567:14;564:34;;;594:1;591;584:12;564:34;632:6;621:9;617:22;607:32;;677:7;670:4;666:2;662:13;658:27;648:55;;699:1;696;689:12;648:55;739:2;726:16;765:2;757:6;754:14;751:34;;;781:1;778;771:12;751:34;834:7;829:2;819:6;816:1;812:14;808:2;804:23;800:32;797:45;794:65;;;855:1;852;845:12;794:65;886:2;878:11;;;;;908:6;;-1:-1:-1;305:615:14;;-1:-1:-1;;;;305:615:14:o;925:180::-;984:6;1037:2;1025:9;1016:7;1012:23;1008:32;1005:52;;;1053:1;1050;1043:12;1005:52;-1:-1:-1;1076:23:14;;925:180;-1:-1:-1;925:180:14:o;1110:184::-;1180:6;1233:2;1221:9;1212:7;1208:23;1204:32;1201:52;;;1249:1;1246;1239:12;1201:52;-1:-1:-1;1272:16:14;;1110:184;-1:-1:-1;1110:184:14:o;5177:135::-;5216:3;-1:-1:-1;;5237:17:14;;5234:43;;;5257:18;;:::i;:::-;-1:-1:-1;5304:1:14;5293:13;;5177:135::o;5317:175::-;5354:3;5398:4;5391:5;5387:16;5427:4;5418:7;5415:17;5412:43;;;5435:18;;:::i;:::-;5484:1;5471:15;;5317:175;-1:-1:-1;;5317:175:14:o;5497:127::-;5558:10;5553:3;5549:20;5546:1;5539:31;5589:4;5586:1;5579:15;5613:4;5610:1;5603:15;5629:127;5690:10;5685:3;5681:20;5678:1;5671:31;5721:4;5718:1;5711:15;5745:4;5742:1;5735:15",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\r\nimport \"./INordiaForFuture.sol\";\r\n\r\ncontract OGSale is Context, Ownable {\r\n    \r\n    bytes32 public merkleRoot;\r\n    INordiaForFuture public nftContract;    \r\n\r\n    mapping(address => uint8) public claimCnts; \r\n    uint256 public constant maxSaleCnt = 2000;\r\n    constructor() {\r\n\r\n    }\r\n    receive() external payable { }\r\n    function setMerkleRoot(bytes32 _merkleRoot) external onlyOwner {\r\n        merkleRoot = _merkleRoot;\r\n    }\r\n    function setNFTContract(address account) external onlyOwner {\r\n        nftContract = INordiaForFuture(account);\r\n    }\r\n\r\n    function claimNft(bytes32[] calldata _merkleProof) external payable {\r\n        require(nftContract.totalSupply() < 2000, \"Sale ended\");\r\n        require(claimCnts[msg.sender] < 2, \"Only 2 nfts available per wallet\");\r\n        require(msg.value == 0.075 ether, \"Not enough eth\");\r\n        bytes32 leaf = keccak256(abi.encodePacked(msg.sender));\r\n        require(MerkleProof.verify(_merkleProof, merkleRoot, leaf), \"Invalid proof\");\r\n        claimCnts[msg.sender] ++;\r\n        nftContract.mint(msg.sender, 1);\r\n    }\r\n\r\n    function claim() external onlyOwner {\r\n        (bool success, ) = payable(msg.sender).call{value: address(this).balance}(\"\");\r\n        success;\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "E:\\Projects\\Solidity\\NordiaForFuture\\contracts\\OGSale.sol",
  "ast": {
    "absolutePath": "project:/contracts/OGSale.sol",
    "exportedSymbols": {
      "Context": [
        527
      ],
      "INordiaForFuture": [
        3154
      ],
      "MerkleProof": [
        1255
      ],
      "OGSale": [
        3464
      ],
      "Ownable": [
        505
      ]
    },
    "id": 3465,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3316,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:13"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 3317,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3465,
        "sourceUnit": 528,
        "src": "60:51:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3318,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3465,
        "sourceUnit": 506,
        "src": "113:52:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 3319,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3465,
        "sourceUnit": 1256,
        "src": "167:68:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/INordiaForFuture.sol",
        "file": "./INordiaForFuture.sol",
        "id": 3320,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3465,
        "sourceUnit": 3155,
        "src": "237:32:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3321,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 527,
              "src": "292:7:13"
            },
            "id": 3322,
            "nodeType": "InheritanceSpecifier",
            "src": "292:7:13"
          },
          {
            "baseName": {
              "id": 3323,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 505,
              "src": "301:7:13"
            },
            "id": 3324,
            "nodeType": "InheritanceSpecifier",
            "src": "301:7:13"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3464,
        "linearizedBaseContracts": [
          3464,
          505,
          527
        ],
        "name": "OGSale",
        "nameLocation": "282:6:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "id": 3326,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "337:10:13",
            "nodeType": "VariableDeclaration",
            "scope": 3464,
            "src": "322:25:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3325,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "322:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d56d229d",
            "id": 3329,
            "mutability": "mutable",
            "name": "nftContract",
            "nameLocation": "378:11:13",
            "nodeType": "VariableDeclaration",
            "scope": 3464,
            "src": "354:35:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_INordiaForFuture_$3154",
              "typeString": "contract INordiaForFuture"
            },
            "typeName": {
              "id": 3328,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3327,
                "name": "INordiaForFuture",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3154,
                "src": "354:16:13"
              },
              "referencedDeclaration": 3154,
              "src": "354:16:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INordiaForFuture_$3154",
                "typeString": "contract INordiaForFuture"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ed47ef50",
            "id": 3333,
            "mutability": "mutable",
            "name": "claimCnts",
            "nameLocation": "435:9:13",
            "nodeType": "VariableDeclaration",
            "scope": 3464,
            "src": "402:42:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 3332,
              "keyType": {
                "id": 3330,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "410:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "402:25:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 3331,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "421:5:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "082b9a97",
            "id": 3336,
            "mutability": "constant",
            "name": "maxSaleCnt",
            "nameLocation": "476:10:13",
            "nodeType": "VariableDeclaration",
            "scope": 3464,
            "src": "452:41:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3334,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "452:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32303030",
              "id": 3335,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "489:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2000_by_1",
                "typeString": "int_const 2000"
              },
              "value": "2000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3339,
              "nodeType": "Block",
              "src": "514:10:13",
              "statements": []
            },
            "id": 3340,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "511:2:13"
            },
            "returnParameters": {
              "id": 3338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:0:13"
            },
            "scope": 3464,
            "src": "500:24:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3343,
              "nodeType": "Block",
              "src": "557:3:13",
              "statements": []
            },
            "id": 3344,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:2:13"
            },
            "returnParameters": {
              "id": 3342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "557:0:13"
            },
            "scope": 3464,
            "src": "530:30:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3355,
              "nodeType": "Block",
              "src": "629:43:13",
              "statements": [
                {
                  "expression": {
                    "id": 3353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3351,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3326,
                      "src": "640:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3352,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3346,
                      "src": "653:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "640:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3354,
                  "nodeType": "ExpressionStatement",
                  "src": "640:24:13"
                }
              ]
            },
            "functionSelector": "7cb64759",
            "id": 3356,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3349,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3348,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 424,
                  "src": "619:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "619:9:13"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "575:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3346,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "597:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3356,
                  "src": "589:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3345,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "588:21:13"
            },
            "returnParameters": {
              "id": 3350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "629:0:13"
            },
            "scope": 3464,
            "src": "566:106:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3369,
              "nodeType": "Block",
              "src": "738:58:13",
              "statements": [
                {
                  "expression": {
                    "id": 3367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3363,
                      "name": "nftContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3329,
                      "src": "749:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INordiaForFuture_$3154",
                        "typeString": "contract INordiaForFuture"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3365,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3358,
                          "src": "780:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3364,
                        "name": "INordiaForFuture",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3154,
                        "src": "763:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_INordiaForFuture_$3154_$",
                          "typeString": "type(contract INordiaForFuture)"
                        }
                      },
                      "id": 3366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "763:25:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INordiaForFuture_$3154",
                        "typeString": "contract INordiaForFuture"
                      }
                    },
                    "src": "749:39:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INordiaForFuture_$3154",
                      "typeString": "contract INordiaForFuture"
                    }
                  },
                  "id": 3368,
                  "nodeType": "ExpressionStatement",
                  "src": "749:39:13"
                }
              ]
            },
            "functionSelector": "a7ccabdf",
            "id": 3370,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3361,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3360,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 424,
                  "src": "728:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "728:9:13"
              }
            ],
            "name": "setNFTContract",
            "nameLocation": "687:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3358,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "710:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3370,
                  "src": "702:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "701:17:13"
            },
            "returnParameters": {
              "id": 3362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:0:13"
            },
            "scope": 3464,
            "src": "678:118:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3437,
              "nodeType": "Block",
              "src": "872:446:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3377,
                              "name": "nftContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3329,
                              "src": "891:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INordiaForFuture_$3154",
                                "typeString": "contract INordiaForFuture"
                              }
                            },
                            "id": 3378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3153,
                            "src": "891:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 3379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "891:25:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32303030",
                          "id": 3380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "919:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000_by_1",
                            "typeString": "int_const 2000"
                          },
                          "value": "2000"
                        },
                        "src": "891:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53616c6520656e646564",
                        "id": 3382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "925:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b036694915d381e2a28fde2d675c29ae068907f000a010baf2c383f04c632766",
                          "typeString": "literal_string \"Sale ended\""
                        },
                        "value": "Sale ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b036694915d381e2a28fde2d675c29ae068907f000a010baf2c383f04c632766",
                          "typeString": "literal_string \"Sale ended\""
                        }
                      ],
                      "id": 3376,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "883:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "883:55:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3384,
                  "nodeType": "ExpressionStatement",
                  "src": "883:55:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 3391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3386,
                            "name": "claimCnts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3333,
                            "src": "957:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                              "typeString": "mapping(address => uint8)"
                            }
                          },
                          "id": 3389,
                          "indexExpression": {
                            "expression": {
                              "id": 3387,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "967:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "967:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "957:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 3390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "981:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "957:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792032206e66747320617661696c61626c65207065722077616c6c6574",
                        "id": 3392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "984:34:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d64f1b4388cc5526fe9f22947da24732c56df9e0147c10c0b6e9a1c7036a2b1a",
                          "typeString": "literal_string \"Only 2 nfts available per wallet\""
                        },
                        "value": "Only 2 nfts available per wallet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d64f1b4388cc5526fe9f22947da24732c56df9e0147c10c0b6e9a1c7036a2b1a",
                          "typeString": "literal_string \"Only 2 nfts available per wallet\""
                        }
                      ],
                      "id": 3385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "949:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "949:70:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3394,
                  "nodeType": "ExpressionStatement",
                  "src": "949:70:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3396,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1038:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1038:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "302e303735",
                          "id": 3398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1051:11:13",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_75000000000000000_by_1",
                            "typeString": "int_const 75000000000000000"
                          },
                          "value": "0.075"
                        },
                        "src": "1038:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820657468",
                        "id": 3400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1064:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d96abdcb6718598615af5856d39e67f33acef28010b2252b4f055b6cfebd761",
                          "typeString": "literal_string \"Not enough eth\""
                        },
                        "value": "Not enough eth"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d96abdcb6718598615af5856d39e67f33acef28010b2252b4f055b6cfebd761",
                          "typeString": "literal_string \"Not enough eth\""
                        }
                      ],
                      "id": 3395,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1030:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1030:51:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3402,
                  "nodeType": "ExpressionStatement",
                  "src": "1030:51:13"
                },
                {
                  "assignments": [
                    3404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3404,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "1100:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3437,
                      "src": "1092:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3403,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1092:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3412,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3408,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1134:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1134:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3406,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1117:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1117:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1117:28:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3405,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1107:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1107:39:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1092:54:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3416,
                            "name": "_merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3373,
                            "src": "1184:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "id": 3417,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3326,
                            "src": "1198:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 3418,
                            "name": "leaf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3404,
                            "src": "1210:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 3414,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1255,
                            "src": "1165:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$1255_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 3415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 777,
                          "src": "1165:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 3419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1165:50:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642070726f6f66",
                        "id": 3420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1217:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639",
                          "typeString": "literal_string \"Invalid proof\""
                        },
                        "value": "Invalid proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639",
                          "typeString": "literal_string \"Invalid proof\""
                        }
                      ],
                      "id": 3413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1157:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1157:76:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3422,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:76:13"
                },
                {
                  "expression": {
                    "id": 3427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1244:24:13",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3423,
                        "name": "claimCnts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3333,
                        "src": "1244:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 3426,
                      "indexExpression": {
                        "expression": {
                          "id": 3424,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1254:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1254:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1244:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 3428,
                  "nodeType": "ExpressionStatement",
                  "src": "1244:24:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3432,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1296:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1296:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 3434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1308:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 3429,
                        "name": "nftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3329,
                        "src": "1279:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INordiaForFuture_$3154",
                          "typeString": "contract INordiaForFuture"
                        }
                      },
                      "id": 3431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3148,
                      "src": "1279:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1279:31:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3436,
                  "nodeType": "ExpressionStatement",
                  "src": "1279:31:13"
                }
              ]
            },
            "functionSelector": "a5a96d00",
            "id": 3438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimNft",
            "nameLocation": "813:8:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3373,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "841:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3438,
                  "src": "822:31:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3371,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "822:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 3372,
                    "nodeType": "ArrayTypeName",
                    "src": "822:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "821:33:13"
            },
            "returnParameters": {
              "id": 3375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "872:0:13"
            },
            "scope": 3464,
            "src": "804:514:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3462,
              "nodeType": "Block",
              "src": "1362:114:13",
              "statements": [
                {
                  "assignments": [
                    3444,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3444,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1379:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3462,
                      "src": "1374:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3443,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1374:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 3459,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 3457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1447:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3447,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1400:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1400:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1392:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 3445,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1392:8:13",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1392:19:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 3450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1392:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 3456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3453,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1432:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OGSale_$3464",
                                  "typeString": "contract OGSale"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OGSale_$3464",
                                  "typeString": "contract OGSale"
                                }
                              ],
                              "id": 3452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1424:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3451,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1424:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1424:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1424:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1392:54:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 3458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1392:58:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1373:77:13"
                },
                {
                  "expression": {
                    "id": 3460,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3444,
                    "src": "1461:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3461,
                  "nodeType": "ExpressionStatement",
                  "src": "1461:7:13"
                }
              ]
            },
            "functionSelector": "4e71d92d",
            "id": 3463,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3441,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3440,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 424,
                  "src": "1352:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "1352:9:13"
              }
            ],
            "name": "claim",
            "nameLocation": "1335:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1340:2:13"
            },
            "returnParameters": {
              "id": 3442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1362:0:13"
            },
            "scope": 3464,
            "src": "1326:150:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3465,
        "src": "273:1208:13",
        "usedErrors": []
      }
    ],
    "src": "33:1450:13"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/OGSale.sol",
    "exportedSymbols": {
      "Context": [
        527
      ],
      "INordiaForFuture": [
        3154
      ],
      "MerkleProof": [
        1255
      ],
      "OGSale": [
        3464
      ],
      "Ownable": [
        505
      ]
    },
    "id": 3465,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3316,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:13"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 3317,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3465,
        "sourceUnit": 528,
        "src": "60:51:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3318,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3465,
        "sourceUnit": 506,
        "src": "113:52:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        "id": 3319,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3465,
        "sourceUnit": 1256,
        "src": "167:68:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/INordiaForFuture.sol",
        "file": "./INordiaForFuture.sol",
        "id": 3320,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3465,
        "sourceUnit": 3155,
        "src": "237:32:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3321,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 527,
              "src": "292:7:13"
            },
            "id": 3322,
            "nodeType": "InheritanceSpecifier",
            "src": "292:7:13"
          },
          {
            "baseName": {
              "id": 3323,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 505,
              "src": "301:7:13"
            },
            "id": 3324,
            "nodeType": "InheritanceSpecifier",
            "src": "301:7:13"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3464,
        "linearizedBaseContracts": [
          3464,
          505,
          527
        ],
        "name": "OGSale",
        "nameLocation": "282:6:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "2eb4a7ab",
            "id": 3326,
            "mutability": "mutable",
            "name": "merkleRoot",
            "nameLocation": "337:10:13",
            "nodeType": "VariableDeclaration",
            "scope": 3464,
            "src": "322:25:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3325,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "322:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d56d229d",
            "id": 3329,
            "mutability": "mutable",
            "name": "nftContract",
            "nameLocation": "378:11:13",
            "nodeType": "VariableDeclaration",
            "scope": 3464,
            "src": "354:35:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_INordiaForFuture_$3154",
              "typeString": "contract INordiaForFuture"
            },
            "typeName": {
              "id": 3328,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3327,
                "name": "INordiaForFuture",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3154,
                "src": "354:16:13"
              },
              "referencedDeclaration": 3154,
              "src": "354:16:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INordiaForFuture_$3154",
                "typeString": "contract INordiaForFuture"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ed47ef50",
            "id": 3333,
            "mutability": "mutable",
            "name": "claimCnts",
            "nameLocation": "435:9:13",
            "nodeType": "VariableDeclaration",
            "scope": 3464,
            "src": "402:42:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 3332,
              "keyType": {
                "id": 3330,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "410:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "402:25:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 3331,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "421:5:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "082b9a97",
            "id": 3336,
            "mutability": "constant",
            "name": "maxSaleCnt",
            "nameLocation": "476:10:13",
            "nodeType": "VariableDeclaration",
            "scope": 3464,
            "src": "452:41:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3334,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "452:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32303030",
              "id": 3335,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "489:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2000_by_1",
                "typeString": "int_const 2000"
              },
              "value": "2000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3339,
              "nodeType": "Block",
              "src": "514:10:13",
              "statements": []
            },
            "id": 3340,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "511:2:13"
            },
            "returnParameters": {
              "id": 3338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:0:13"
            },
            "scope": 3464,
            "src": "500:24:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3343,
              "nodeType": "Block",
              "src": "557:3:13",
              "statements": []
            },
            "id": 3344,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:2:13"
            },
            "returnParameters": {
              "id": 3342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "557:0:13"
            },
            "scope": 3464,
            "src": "530:30:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3355,
              "nodeType": "Block",
              "src": "629:43:13",
              "statements": [
                {
                  "expression": {
                    "id": 3353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3351,
                      "name": "merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3326,
                      "src": "640:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3352,
                      "name": "_merkleRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3346,
                      "src": "653:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "640:24:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3354,
                  "nodeType": "ExpressionStatement",
                  "src": "640:24:13"
                }
              ]
            },
            "functionSelector": "7cb64759",
            "id": 3356,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3349,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3348,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 424,
                  "src": "619:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "619:9:13"
              }
            ],
            "name": "setMerkleRoot",
            "nameLocation": "575:13:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3346,
                  "mutability": "mutable",
                  "name": "_merkleRoot",
                  "nameLocation": "597:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3356,
                  "src": "589:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3345,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "589:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "588:21:13"
            },
            "returnParameters": {
              "id": 3350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "629:0:13"
            },
            "scope": 3464,
            "src": "566:106:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3369,
              "nodeType": "Block",
              "src": "738:58:13",
              "statements": [
                {
                  "expression": {
                    "id": 3367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3363,
                      "name": "nftContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3329,
                      "src": "749:11:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INordiaForFuture_$3154",
                        "typeString": "contract INordiaForFuture"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3365,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3358,
                          "src": "780:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3364,
                        "name": "INordiaForFuture",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3154,
                        "src": "763:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_INordiaForFuture_$3154_$",
                          "typeString": "type(contract INordiaForFuture)"
                        }
                      },
                      "id": 3366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "763:25:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INordiaForFuture_$3154",
                        "typeString": "contract INordiaForFuture"
                      }
                    },
                    "src": "749:39:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INordiaForFuture_$3154",
                      "typeString": "contract INordiaForFuture"
                    }
                  },
                  "id": 3368,
                  "nodeType": "ExpressionStatement",
                  "src": "749:39:13"
                }
              ]
            },
            "functionSelector": "a7ccabdf",
            "id": 3370,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3361,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3360,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 424,
                  "src": "728:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "728:9:13"
              }
            ],
            "name": "setNFTContract",
            "nameLocation": "687:14:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3358,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "710:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3370,
                  "src": "702:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "702:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "701:17:13"
            },
            "returnParameters": {
              "id": 3362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:0:13"
            },
            "scope": 3464,
            "src": "678:118:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3437,
              "nodeType": "Block",
              "src": "872:446:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 3377,
                              "name": "nftContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3329,
                              "src": "891:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INordiaForFuture_$3154",
                                "typeString": "contract INordiaForFuture"
                              }
                            },
                            "id": 3378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3153,
                            "src": "891:23:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 3379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "891:25:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32303030",
                          "id": 3380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "919:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000_by_1",
                            "typeString": "int_const 2000"
                          },
                          "value": "2000"
                        },
                        "src": "891:32:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53616c6520656e646564",
                        "id": 3382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "925:12:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b036694915d381e2a28fde2d675c29ae068907f000a010baf2c383f04c632766",
                          "typeString": "literal_string \"Sale ended\""
                        },
                        "value": "Sale ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b036694915d381e2a28fde2d675c29ae068907f000a010baf2c383f04c632766",
                          "typeString": "literal_string \"Sale ended\""
                        }
                      ],
                      "id": 3376,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "883:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "883:55:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3384,
                  "nodeType": "ExpressionStatement",
                  "src": "883:55:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 3391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 3386,
                            "name": "claimCnts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3333,
                            "src": "957:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                              "typeString": "mapping(address => uint8)"
                            }
                          },
                          "id": 3389,
                          "indexExpression": {
                            "expression": {
                              "id": 3387,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "967:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "967:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "957:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 3390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "981:1:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "957:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792032206e66747320617661696c61626c65207065722077616c6c6574",
                        "id": 3392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "984:34:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d64f1b4388cc5526fe9f22947da24732c56df9e0147c10c0b6e9a1c7036a2b1a",
                          "typeString": "literal_string \"Only 2 nfts available per wallet\""
                        },
                        "value": "Only 2 nfts available per wallet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d64f1b4388cc5526fe9f22947da24732c56df9e0147c10c0b6e9a1c7036a2b1a",
                          "typeString": "literal_string \"Only 2 nfts available per wallet\""
                        }
                      ],
                      "id": 3385,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "949:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "949:70:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3394,
                  "nodeType": "ExpressionStatement",
                  "src": "949:70:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3396,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1038:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1038:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "302e303735",
                          "id": 3398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1051:11:13",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_75000000000000000_by_1",
                            "typeString": "int_const 75000000000000000"
                          },
                          "value": "0.075"
                        },
                        "src": "1038:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820657468",
                        "id": 3400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1064:16:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d96abdcb6718598615af5856d39e67f33acef28010b2252b4f055b6cfebd761",
                          "typeString": "literal_string \"Not enough eth\""
                        },
                        "value": "Not enough eth"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d96abdcb6718598615af5856d39e67f33acef28010b2252b4f055b6cfebd761",
                          "typeString": "literal_string \"Not enough eth\""
                        }
                      ],
                      "id": 3395,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1030:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1030:51:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3402,
                  "nodeType": "ExpressionStatement",
                  "src": "1030:51:13"
                },
                {
                  "assignments": [
                    3404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3404,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "1100:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3437,
                      "src": "1092:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3403,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1092:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3412,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3408,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1134:3:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1134:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 3406,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1117:3:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1117:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1117:28:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3405,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1107:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1107:39:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1092:54:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3416,
                            "name": "_merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3373,
                            "src": "1184:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          {
                            "id": 3417,
                            "name": "merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3326,
                            "src": "1198:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 3418,
                            "name": "leaf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3404,
                            "src": "1210:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 3414,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1255,
                            "src": "1165:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$1255_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 3415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 777,
                          "src": "1165:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 3419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1165:50:13",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642070726f6f66",
                        "id": 3420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1217:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639",
                          "typeString": "literal_string \"Invalid proof\""
                        },
                        "value": "Invalid proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbb8b2d35c676776519896c045ce9c5b267915e4127b1aa1fa65a56a3d2b2639",
                          "typeString": "literal_string \"Invalid proof\""
                        }
                      ],
                      "id": 3413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1157:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1157:76:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3422,
                  "nodeType": "ExpressionStatement",
                  "src": "1157:76:13"
                },
                {
                  "expression": {
                    "id": 3427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1244:24:13",
                    "subExpression": {
                      "baseExpression": {
                        "id": 3423,
                        "name": "claimCnts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3333,
                        "src": "1244:9:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 3426,
                      "indexExpression": {
                        "expression": {
                          "id": 3424,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1254:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1254:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1244:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 3428,
                  "nodeType": "ExpressionStatement",
                  "src": "1244:24:13"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3432,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1296:3:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1296:10:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 3434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1308:1:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 3429,
                        "name": "nftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3329,
                        "src": "1279:11:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INordiaForFuture_$3154",
                          "typeString": "contract INordiaForFuture"
                        }
                      },
                      "id": 3431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3148,
                      "src": "1279:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 3435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1279:31:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3436,
                  "nodeType": "ExpressionStatement",
                  "src": "1279:31:13"
                }
              ]
            },
            "functionSelector": "a5a96d00",
            "id": 3438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimNft",
            "nameLocation": "813:8:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3373,
                  "mutability": "mutable",
                  "name": "_merkleProof",
                  "nameLocation": "841:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 3438,
                  "src": "822:31:13",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3371,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "822:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 3372,
                    "nodeType": "ArrayTypeName",
                    "src": "822:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "821:33:13"
            },
            "returnParameters": {
              "id": 3375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "872:0:13"
            },
            "scope": 3464,
            "src": "804:514:13",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3462,
              "nodeType": "Block",
              "src": "1362:114:13",
              "statements": [
                {
                  "assignments": [
                    3444,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3444,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1379:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 3462,
                      "src": "1374:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3443,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1374:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 3459,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 3457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1447:2:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3447,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1400:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1400:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1392:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 3445,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1392:8:13",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1392:19:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 3450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "1392:24:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 3456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 3453,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1432:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OGSale_$3464",
                                  "typeString": "contract OGSale"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OGSale_$3464",
                                  "typeString": "contract OGSale"
                                }
                              ],
                              "id": 3452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1424:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3451,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1424:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1424:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 3455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1424:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1392:54:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 3458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1392:58:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1373:77:13"
                },
                {
                  "expression": {
                    "id": 3460,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3444,
                    "src": "1461:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3461,
                  "nodeType": "ExpressionStatement",
                  "src": "1461:7:13"
                }
              ]
            },
            "functionSelector": "4e71d92d",
            "id": 3463,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3441,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3440,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 424,
                  "src": "1352:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "1352:9:13"
              }
            ],
            "name": "claim",
            "nameLocation": "1335:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1340:2:13"
            },
            "returnParameters": {
              "id": 3442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1362:0:13"
            },
            "scope": 3464,
            "src": "1326:150:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3465,
        "src": "273:1208:13",
        "usedErrors": []
      }
    ],
    "src": "33:1450:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {
    "97": {
      "events": {},
      "links": {},
      "address": "0xF99b163a6849eA8e22b6018535f7F85842d6437F",
      "transactionHash": "0x0710431d75975f6065f58c1b574f7382b50feaa46d9ec79b7c4c56950c4a3fb0"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-07-16T21:22:31.390Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}