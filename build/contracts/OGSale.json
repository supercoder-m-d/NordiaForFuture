{
  "contractName": "OGSale",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimCnts",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "maxSaleCnt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "nftContract",
      "outputs": [
        {
          "internalType": "contract INordiaForFuture",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "setNFTContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimNft",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimCnts\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNft\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSaleCnt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"contract INordiaForFuture\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"setNFTContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/OGSale.sol\":\"OGSale\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/INordiaForFuture.sol\":{\"keccak256\":\"0xd47e04ed77d3b1b4eda9c096adcf7cbe7def1f2c58dac320e94c3b8ccecd49e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://166516f7c812b6af3924c6d31d7dad6b4fe89a07344dc128b70cae7baeded670\",\"dweb:/ipfs/QmYBHB2j5pPQwpk4Bf4THkf7GNPyQYJaSBJtjaAX1pJJCj\"]},\"project:/contracts/OGSale.sol\":{\"keccak256\":\"0x8d6793b97ccc56d9a88ecc43164c09e9acd15e0806abc7f0c4d6ff556b175436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://874e184136c894f6bc7b0a27c7f35b18255240f4f7916e27e562c0f63a16e66c\",\"dweb:/ipfs/QmeANLqpHWFvNwsdm5s84kLBBpygkpesqGdy2uEDACgKed\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106268061007e6000396000f3fe60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b146100f3578063a7ccabdf14610125578063d56d229d14610145578063ed47ef5014610165578063f2fde38b146101a757600080fd5b8063082b9a97146100965780634e71d92d146100bf5780635ae2afa4146100d6578063715018a6146100de57600080fd5b3661009157005b600080fd5b3480156100a257600080fd5b506100ac6107d081565b6040519081526020015b60405180910390f35b3480156100cb57600080fd5b506100d46101c7565b005b6100d461021c565b3480156100ea57600080fd5b506100d4610418565b3480156100ff57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100b6565b34801561013157600080fd5b506100d4610140366004610579565b61042c565b34801561015157600080fd5b5060015461010d906001600160a01b031681565b34801561017157600080fd5b50610195610180366004610579565b60026020526000908152604090205460ff1681565b60405160ff90911681526020016100b6565b3480156101b357600080fd5b506100d46101c2366004610579565b610456565b6101cf6104cf565b604051600090339047908381818185875af1925050503d8060008114610211576040519150601f19603f3d011682016040523d82523d6000602084013e610216565b606091505b50505050565b600154604080516318160ddd60e01b815290516107d0926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561026257600080fd5b505afa158015610276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029a91906105a9565b106102d95760405162461bcd60e51b815260206004820152600a60248201526914d85b1948195b99195960b21b60448201526064015b60405180910390fd5b3360009081526002602081905260409091205460ff161061033c5760405162461bcd60e51b815260206004820181905260248201527f4f6e6c792032206e66747320617661696c61626c65207065722077616c6c657460448201526064016102d0565b3467010a741a46278000146103845760405162461bcd60e51b815260206004820152600e60248201526d09cdee840cadcdeeaced040cae8d60931b60448201526064016102d0565b336000908152600260205260408120805460ff16916103a2836105c2565b825460ff9182166101009390930a9283029190920219909116179055506001546040516335313c2160e11b81523360048201526001600160a01b0390911690636a62784290602401600060405180830381600087803b15801561040457600080fd5b505af1158015610216573d6000803e3d6000fd5b6104206104cf565b61042a6000610529565b565b6104346104cf565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61045e6104cf565b6001600160a01b0381166104c35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102d0565b6104cc81610529565b50565b6000546001600160a01b0316331461042a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561058b57600080fd5b81356001600160a01b03811681146105a257600080fd5b9392505050565b6000602082840312156105bb57600080fd5b5051919050565b600060ff821660ff8114156105e757634e487b7160e01b600052601160045260246000fd5b6001019291505056fea2646970667358221220cba823c9fb7ebbdcd9b556a71c0feaa29ea73f753b29497b512f11ebe6f49ce664736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80638da5cb5b116100595780638da5cb5b146100f3578063a7ccabdf14610125578063d56d229d14610145578063ed47ef5014610165578063f2fde38b146101a757600080fd5b8063082b9a97146100965780634e71d92d146100bf5780635ae2afa4146100d6578063715018a6146100de57600080fd5b3661009157005b600080fd5b3480156100a257600080fd5b506100ac6107d081565b6040519081526020015b60405180910390f35b3480156100cb57600080fd5b506100d46101c7565b005b6100d461021c565b3480156100ea57600080fd5b506100d4610418565b3480156100ff57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100b6565b34801561013157600080fd5b506100d4610140366004610579565b61042c565b34801561015157600080fd5b5060015461010d906001600160a01b031681565b34801561017157600080fd5b50610195610180366004610579565b60026020526000908152604090205460ff1681565b60405160ff90911681526020016100b6565b3480156101b357600080fd5b506100d46101c2366004610579565b610456565b6101cf6104cf565b604051600090339047908381818185875af1925050503d8060008114610211576040519150601f19603f3d011682016040523d82523d6000602084013e610216565b606091505b50505050565b600154604080516318160ddd60e01b815290516107d0926001600160a01b0316916318160ddd916004808301926020929190829003018186803b15801561026257600080fd5b505afa158015610276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029a91906105a9565b106102d95760405162461bcd60e51b815260206004820152600a60248201526914d85b1948195b99195960b21b60448201526064015b60405180910390fd5b3360009081526002602081905260409091205460ff161061033c5760405162461bcd60e51b815260206004820181905260248201527f4f6e6c792032206e66747320617661696c61626c65207065722077616c6c657460448201526064016102d0565b3467010a741a46278000146103845760405162461bcd60e51b815260206004820152600e60248201526d09cdee840cadcdeeaced040cae8d60931b60448201526064016102d0565b336000908152600260205260408120805460ff16916103a2836105c2565b825460ff9182166101009390930a9283029190920219909116179055506001546040516335313c2160e11b81523360048201526001600160a01b0390911690636a62784290602401600060405180830381600087803b15801561040457600080fd5b505af1158015610216573d6000803e3d6000fd5b6104206104cf565b61042a6000610529565b565b6104346104cf565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61045e6104cf565b6001600160a01b0381166104c35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102d0565b6104cc81610529565b50565b6000546001600160a01b0316331461042a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561058b57600080fd5b81356001600160a01b03811681146105a257600080fd5b9392505050565b6000602082840312156105bb57600080fd5b5051919050565b600060ff821660ff8114156105e757634e487b7160e01b600052601160045260246000fd5b6001019291505056fea2646970667358221220cba823c9fb7ebbdcd9b556a71c0feaa29ea73f753b29497b512f11ebe6f49ce664736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3601:19",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:19",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:19"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:19"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:19"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:19",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:19",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:19",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:19"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:19"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:19"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:19",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:19",
                "type": ""
              }
            ],
            "src": "14:286:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "386:103:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "432:16:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "441:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "444:1:19",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "434:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "434:12:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "434:12:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "407:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "416:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "403:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "403:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "428:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "399:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "399:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "396:52:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "457:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "473:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "467:5:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "467:16:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "457:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "352:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "363:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "375:6:19",
                "type": ""
              }
            ],
            "src": "305:184:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "685:14:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "687:10:19",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "694:3:19"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "687:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "669:3:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "677:3:19",
                "type": ""
              }
            ],
            "src": "494:205:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "805:102:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "815:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "827:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "838:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "823:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "823:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "815:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "857:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "872:6:19"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "888:3:19",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "893:1:19",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "884:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "884:11:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "897:1:19",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "880:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "880:19:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "868:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "868:32:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "850:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "850:51:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "850:51:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "774:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "785:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "796:4:19",
                "type": ""
              }
            ],
            "src": "704:203:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1038:102:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1048:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1060:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1071:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1056:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1056:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1048:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1090:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1105:6:19"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1121:3:19",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1126:1:19",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1117:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1117:11:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1130:1:19",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1113:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1113:19:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1101:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1101:32:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1083:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1083:51:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1083:51:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_INordiaForFuture_$2619__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1007:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1018:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1029:4:19",
                "type": ""
              }
            ],
            "src": "912:228:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1319:228:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1336:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1347:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1329:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1329:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1329:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1370:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1381:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1366:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1366:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1386:2:19",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1359:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1359:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1359:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1409:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1420:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1405:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1405:18:19"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1425:34:19",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1398:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1398:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1398:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1480:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1491:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1476:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1476:18:19"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1496:8:19",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1469:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1469:36:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1469:36:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1514:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1526:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1537:3:19",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1522:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1522:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1514:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1296:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1310:4:19",
                "type": ""
              }
            ],
            "src": "1145:402:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1726:164:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1743:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1754:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1736:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1736:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1736:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1777:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1788:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1773:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1773:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1793:2:19",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1766:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1766:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1766:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1816:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1827:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1812:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1812:18:19"
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820657468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1832:16:19",
                        "type": "",
                        "value": "Not enough eth"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1805:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1805:44:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1805:44:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1858:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1870:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1881:2:19",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1866:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1866:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1858:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5d96abdcb6718598615af5856d39e67f33acef28010b2252b4f055b6cfebd761__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1703:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1717:4:19",
                "type": ""
              }
            ],
            "src": "1552:338:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2069:182:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2086:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2097:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2079:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2079:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2079:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2120:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2131:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2116:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2116:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2136:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2109:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2109:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2109:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2159:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2170:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2155:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2155:18:19"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2175:34:19",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2148:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2148:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2148:62:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2219:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2231:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2242:2:19",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2227:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2227:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2219:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2046:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2060:4:19",
                "type": ""
              }
            ],
            "src": "1895:356:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2430:160:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2447:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2458:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2440:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2440:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2440:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2481:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2492:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2477:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2477:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2497:2:19",
                        "type": "",
                        "value": "10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2470:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2470:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2470:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2520:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2531:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2516:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2516:18:19"
                      },
                      {
                        "hexValue": "53616c6520656e646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2536:12:19",
                        "type": "",
                        "value": "Sale ended"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2509:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2509:40:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2509:40:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2558:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2570:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2581:2:19",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2566:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2566:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2558:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b036694915d381e2a28fde2d675c29ae068907f000a010baf2c383f04c632766__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2407:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2421:4:19",
                "type": ""
              }
            ],
            "src": "2256:334:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2769:182:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2786:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2797:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2779:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2779:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2779:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2820:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2831:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2816:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2816:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2836:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2809:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2809:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2809:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2859:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2870:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2855:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2855:18:19"
                      },
                      {
                        "hexValue": "4f6e6c792032206e66747320617661696c61626c65207065722077616c6c6574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2875:34:19",
                        "type": "",
                        "value": "Only 2 nfts available per wallet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2848:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2848:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2848:62:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2919:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2931:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2942:2:19",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2927:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2927:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2919:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d64f1b4388cc5526fe9f22947da24732c56df9e0147c10c0b6e9a1c7036a2b1a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2746:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2760:4:19",
                "type": ""
              }
            ],
            "src": "2595:356:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3057:76:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3067:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3079:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3090:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3075:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3075:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3067:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3109:9:19"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3120:6:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3102:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3102:25:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3102:25:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3026:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3037:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3048:4:19",
                "type": ""
              }
            ],
            "src": "2956:177:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3235:87:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3245:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3257:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3268:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3253:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3253:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3245:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3287:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3302:6:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3310:4:19",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3298:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3298:17:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3280:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3280:36:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3280:36:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3204:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3215:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3226:4:19",
                "type": ""
              }
            ],
            "src": "3138:184:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3372:227:19",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3382:31:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3401:5:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3408:4:19",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3397:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3397:16:19"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "3386:7:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3451:111:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3472:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3479:3:19",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3484:10:19",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3475:3:19"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3475:20:19"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3465:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3465:31:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3465:31:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3516:1:19",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3519:4:19",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3509:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3509:15:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3509:15:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3544:1:19",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3547:4:19",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3537:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3537:15:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3537:15:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3428:7:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3437:4:19",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "3425:2:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3425:17:19"
                  },
                  "nodeType": "YulIf",
                  "src": "3422:140:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3571:22:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3582:7:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3591:1:19",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3578:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3578:15:19"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "3571:3:19"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3354:5:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "3364:3:19",
                "type": ""
              }
            ],
            "src": "3327:272:19"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_INordiaForFuture_$2619__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5d96abdcb6718598615af5856d39e67f33acef28010b2252b4f055b6cfebd761__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not enough eth\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b036694915d381e2a28fde2d675c29ae068907f000a010baf2c383f04c632766__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Sale ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d64f1b4388cc5526fe9f22947da24732c56df9e0147c10c0b6e9a1c7036a2b1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Only 2 nfts available per wallet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value_1, 1)\n    }\n}",
      "id": 19,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "203:878:18:-:0;;;398:24;;;;;;;;;-1:-1:-1;936:32:2;719:10:11;936:18:2;:32::i;:::-;203:878:18;;2433:187:2;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:2;;;-1:-1:-1;;;;;;2541:17:2;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;203:878:18:-;;;;;;;",
  "deployedSourceMap": "203:878:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;350:41;;;;;;;;;;;;387:4;350:41;;;;;3102:25:19;;;3090:2;3075:18;350:41:18;;;;;;;;926:150;;;;;;;;;;;;;:::i;:::-;;590:328;;;:::i;1831:101:2:-;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:2;1273:6;-1:-1:-1;;;;;1273:6:2;1201:85;;;-1:-1:-1;;;;;868:32:19;;;850:51;;838:2;823:18;1201:85:2;704:203:19;464:118:18;;;;;;;;;;-1:-1:-1;464:118:18;;;;;:::i;:::-;;:::i;252:35::-;;;;;;;;;;-1:-1:-1;252:35:18;;;;-1:-1:-1;;;;;252:35:18;;;300:42;;;;;;;;;;-1:-1:-1;300:42:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3310:4:19;3298:17;;;3280:36;;3268:2;3253:18;300:42:18;3138:184:19;2081:198:2;;;;;;;;;;-1:-1:-1;2081:198:2;;;;;:::i;:::-;;:::i;926:150:18:-;1094:13:2;:11;:13::i;:::-;992:58:18::1;::::0;974:12:::1;::::0;1000:10:::1;::::0;1024:21:::1;::::0;974:12;992:58;974:12;992:58;1024:21;1000:10;992:58:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;926:150:18:o;590:328::-;646:11;;:25;;;-1:-1:-1;;;646:25:18;;;;674:4;;-1:-1:-1;;;;;646:11:18;;:23;;:25;;;;;;;;;;;;;;:11;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:32;638:55;;;;-1:-1:-1;;;638:55:18;;2458:2:19;638:55:18;;;2440:21:19;2497:2;2477:18;;;2470:30;-1:-1:-1;;;2516:18:19;;;2509:40;2566:18;;638:55:18;;;;;;;;;722:10;712:21;;;;736:1;712:21;;;;;;;;;;;:25;704:70;;;;-1:-1:-1;;;704:70:18;;2797:2:19;704:70:18;;;2779:21:19;;;2816:18;;;2809:30;2875:34;2855:18;;;2848:62;2927:18;;704:70:18;2595:356:19;704:70:18;793:9;806:11;793:24;785:51;;;;-1:-1:-1;;;785:51:18;;1754:2:19;785:51:18;;;1736:21:19;1793:2;1773:18;;;1766:30;-1:-1:-1;;;1812:18:19;;;1805:44;1866:18;;785:51:18;1552:338:19;785:51:18;857:10;847:21;;;;:9;:21;;;;;:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;882:11:18;:28;;-1:-1:-1;;;882:28:18;;899:10;882:28;;;850:51:19;-1:-1:-1;;;;;882:11:18;;;;:16;;823:18:19;;882:28:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:2;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;464:118:18:-;1094:13:2;:11;:13::i;:::-;535:11:18::1;:39:::0;;-1:-1:-1;;;;;;535:39:18::1;-1:-1:-1::0;;;;;535:39:18;;;::::1;::::0;;;::::1;::::0;;464:118::o;2081:198:2:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:2;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:2;;1347:2:19;2161:73:2::1;::::0;::::1;1329:21:19::0;1386:2;1366:18;;;1359:30;1425:34;1405:18;;;1398:62;-1:-1:-1;;;1476:18:19;;;1469:36;1522:19;;2161:73:2::1;1145:402:19::0;2161:73:2::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:2;719:10:11;1422:23:2;1414:68;;;;-1:-1:-1;;;1414:68:2;;2097:2:19;1414:68:2;;;2079:21:19;;;2116:18;;;2109:30;2175:34;2155:18;;;2148:62;2227:18;;1414:68:2;1895:356:19;2433:187:2;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:2;;;-1:-1:-1;;;;;;2541:17:2;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:286:19:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:19;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:19:o;305:184::-;375:6;428:2;416:9;407:7;403:23;399:32;396:52;;;444:1;441;434:12;396:52;-1:-1:-1;467:16:19;;305:184;-1:-1:-1;305:184:19:o;3327:272::-;3364:3;3408:4;3401:5;3397:16;3437:4;3428:7;3425:17;3422:140;;;3484:10;3479:3;3475:20;3472:1;3465:31;3519:4;3516:1;3509:15;3547:4;3544:1;3537:15;3422:140;3591:1;3578:15;;3327:272;-1:-1:-1;;3327:272:19:o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./INordiaForFuture.sol\";\r\n\r\ncontract OGSale is Context, Ownable {\r\n    \r\n    INordiaForFuture public nftContract;    \r\n\r\n    mapping(address => uint8) public claimCnts; \r\n    uint256 public constant maxSaleCnt = 2000;\r\n    constructor() {\r\n\r\n    }\r\n    receive() external payable { }\r\n    function setNFTContract(address account) external onlyOwner {\r\n        nftContract = INordiaForFuture(account);\r\n    }\r\n\r\n    function claimNft() external payable {\r\n        require(nftContract.totalSupply() < 2000, \"Sale ended\");\r\n        require(claimCnts[msg.sender] < 2, \"Only 2 nfts available per wallet\");\r\n        require(msg.value == 0.075 ether, \"Not enough eth\");\r\n        claimCnts[msg.sender] ++;\r\n        nftContract.mint(msg.sender);\r\n    }\r\n\r\n    function claim() external onlyOwner {\r\n        (bool success, ) = payable(msg.sender).call{value: address(this).balance}(\"\");\r\n        success;\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "E:\\Projects\\Solidity\\NordiaForFuture\\contracts\\OGSale.sol",
  "ast": {
    "absolutePath": "project:/contracts/OGSale.sol",
    "exportedSymbols": {
      "Context": [
        2344
      ],
      "INordiaForFuture": [
        2619
      ],
      "OGSale": [
        2966
      ],
      "Ownable": [
        505
      ]
    },
    "id": 2967,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2857,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:18"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 2858,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2967,
        "sourceUnit": 2345,
        "src": "60:51:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2859,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2967,
        "sourceUnit": 506,
        "src": "113:52:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/INordiaForFuture.sol",
        "file": "./INordiaForFuture.sol",
        "id": 2860,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2967,
        "sourceUnit": 2620,
        "src": "167:32:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2861,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2344,
              "src": "222:7:18"
            },
            "id": 2862,
            "nodeType": "InheritanceSpecifier",
            "src": "222:7:18"
          },
          {
            "baseName": {
              "id": 2863,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 505,
              "src": "231:7:18"
            },
            "id": 2864,
            "nodeType": "InheritanceSpecifier",
            "src": "231:7:18"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2966,
        "linearizedBaseContracts": [
          2966,
          505,
          2344
        ],
        "name": "OGSale",
        "nameLocation": "212:6:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "d56d229d",
            "id": 2867,
            "mutability": "mutable",
            "name": "nftContract",
            "nameLocation": "276:11:18",
            "nodeType": "VariableDeclaration",
            "scope": 2966,
            "src": "252:35:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_INordiaForFuture_$2619",
              "typeString": "contract INordiaForFuture"
            },
            "typeName": {
              "id": 2866,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2865,
                "name": "INordiaForFuture",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2619,
                "src": "252:16:18"
              },
              "referencedDeclaration": 2619,
              "src": "252:16:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INordiaForFuture_$2619",
                "typeString": "contract INordiaForFuture"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ed47ef50",
            "id": 2871,
            "mutability": "mutable",
            "name": "claimCnts",
            "nameLocation": "333:9:18",
            "nodeType": "VariableDeclaration",
            "scope": 2966,
            "src": "300:42:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 2870,
              "keyType": {
                "id": 2868,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "308:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "300:25:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 2869,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "319:5:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "082b9a97",
            "id": 2874,
            "mutability": "constant",
            "name": "maxSaleCnt",
            "nameLocation": "374:10:18",
            "nodeType": "VariableDeclaration",
            "scope": 2966,
            "src": "350:41:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2872,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "350:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32303030",
              "id": 2873,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "387:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2000_by_1",
                "typeString": "int_const 2000"
              },
              "value": "2000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2877,
              "nodeType": "Block",
              "src": "412:10:18",
              "statements": []
            },
            "id": 2878,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "409:2:18"
            },
            "returnParameters": {
              "id": 2876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:0:18"
            },
            "scope": 2966,
            "src": "398:24:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2881,
              "nodeType": "Block",
              "src": "455:3:18",
              "statements": []
            },
            "id": 2882,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:2:18"
            },
            "returnParameters": {
              "id": 2880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "455:0:18"
            },
            "scope": 2966,
            "src": "428:30:18",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2895,
              "nodeType": "Block",
              "src": "524:58:18",
              "statements": [
                {
                  "expression": {
                    "id": 2893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2889,
                      "name": "nftContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2867,
                      "src": "535:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INordiaForFuture_$2619",
                        "typeString": "contract INordiaForFuture"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2891,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2884,
                          "src": "566:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2890,
                        "name": "INordiaForFuture",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2619,
                        "src": "549:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_INordiaForFuture_$2619_$",
                          "typeString": "type(contract INordiaForFuture)"
                        }
                      },
                      "id": 2892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "549:25:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INordiaForFuture_$2619",
                        "typeString": "contract INordiaForFuture"
                      }
                    },
                    "src": "535:39:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INordiaForFuture_$2619",
                      "typeString": "contract INordiaForFuture"
                    }
                  },
                  "id": 2894,
                  "nodeType": "ExpressionStatement",
                  "src": "535:39:18"
                }
              ]
            },
            "functionSelector": "a7ccabdf",
            "id": 2896,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2887,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2886,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 424,
                  "src": "514:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "514:9:18"
              }
            ],
            "name": "setNFTContract",
            "nameLocation": "473:14:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2884,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "496:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2896,
                  "src": "488:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "488:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "487:17:18"
            },
            "returnParameters": {
              "id": 2888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:0:18"
            },
            "scope": 2966,
            "src": "464:118:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2939,
              "nodeType": "Block",
              "src": "627:291:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2900,
                              "name": "nftContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2867,
                              "src": "646:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INordiaForFuture_$2619",
                                "typeString": "contract INordiaForFuture"
                              }
                            },
                            "id": 2901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2618,
                            "src": "646:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "646:25:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32303030",
                          "id": 2903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "674:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000_by_1",
                            "typeString": "int_const 2000"
                          },
                          "value": "2000"
                        },
                        "src": "646:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53616c6520656e646564",
                        "id": 2905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "680:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b036694915d381e2a28fde2d675c29ae068907f000a010baf2c383f04c632766",
                          "typeString": "literal_string \"Sale ended\""
                        },
                        "value": "Sale ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b036694915d381e2a28fde2d675c29ae068907f000a010baf2c383f04c632766",
                          "typeString": "literal_string \"Sale ended\""
                        }
                      ],
                      "id": 2899,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "638:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "638:55:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2907,
                  "nodeType": "ExpressionStatement",
                  "src": "638:55:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2909,
                            "name": "claimCnts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2871,
                            "src": "712:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                              "typeString": "mapping(address => uint8)"
                            }
                          },
                          "id": 2912,
                          "indexExpression": {
                            "expression": {
                              "id": 2910,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "722:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2911,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "722:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "712:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 2913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "736:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "712:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792032206e66747320617661696c61626c65207065722077616c6c6574",
                        "id": 2915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "739:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d64f1b4388cc5526fe9f22947da24732c56df9e0147c10c0b6e9a1c7036a2b1a",
                          "typeString": "literal_string \"Only 2 nfts available per wallet\""
                        },
                        "value": "Only 2 nfts available per wallet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d64f1b4388cc5526fe9f22947da24732c56df9e0147c10c0b6e9a1c7036a2b1a",
                          "typeString": "literal_string \"Only 2 nfts available per wallet\""
                        }
                      ],
                      "id": 2908,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "704:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "704:70:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2917,
                  "nodeType": "ExpressionStatement",
                  "src": "704:70:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2919,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "793:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "793:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "302e303735",
                          "id": 2921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "806:11:18",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_75000000000000000_by_1",
                            "typeString": "int_const 75000000000000000"
                          },
                          "value": "0.075"
                        },
                        "src": "793:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820657468",
                        "id": 2923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "819:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d96abdcb6718598615af5856d39e67f33acef28010b2252b4f055b6cfebd761",
                          "typeString": "literal_string \"Not enough eth\""
                        },
                        "value": "Not enough eth"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d96abdcb6718598615af5856d39e67f33acef28010b2252b4f055b6cfebd761",
                          "typeString": "literal_string \"Not enough eth\""
                        }
                      ],
                      "id": 2918,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "785:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "785:51:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2925,
                  "nodeType": "ExpressionStatement",
                  "src": "785:51:18"
                },
                {
                  "expression": {
                    "id": 2930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "847:24:18",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2926,
                        "name": "claimCnts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2871,
                        "src": "847:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 2929,
                      "indexExpression": {
                        "expression": {
                          "id": 2927,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "857:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "857:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "847:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2931,
                  "nodeType": "ExpressionStatement",
                  "src": "847:24:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2935,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "899:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "899:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2932,
                        "name": "nftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2867,
                        "src": "882:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INordiaForFuture_$2619",
                          "typeString": "contract INordiaForFuture"
                        }
                      },
                      "id": 2934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2613,
                      "src": "882:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "882:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2938,
                  "nodeType": "ExpressionStatement",
                  "src": "882:28:18"
                }
              ]
            },
            "functionSelector": "5ae2afa4",
            "id": 2940,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimNft",
            "nameLocation": "599:8:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "607:2:18"
            },
            "returnParameters": {
              "id": 2898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "627:0:18"
            },
            "scope": 2966,
            "src": "590:328:18",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2964,
              "nodeType": "Block",
              "src": "962:114:18",
              "statements": [
                {
                  "assignments": [
                    2946,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2946,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "979:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2964,
                      "src": "974:12:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2945,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "974:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2961,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 2959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1047:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2949,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1000:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1000:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "992:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 2947,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "992:8:18",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "992:19:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 2952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "992:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 2958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2955,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1032:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OGSale_$2966",
                                  "typeString": "contract OGSale"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OGSale_$2966",
                                  "typeString": "contract OGSale"
                                }
                              ],
                              "id": 2954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1024:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2953,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1024:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1024:13:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1024:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "992:54:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 2960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "992:58:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "973:77:18"
                },
                {
                  "expression": {
                    "id": 2962,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2946,
                    "src": "1061:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2963,
                  "nodeType": "ExpressionStatement",
                  "src": "1061:7:18"
                }
              ]
            },
            "functionSelector": "4e71d92d",
            "id": 2965,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2943,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2942,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 424,
                  "src": "952:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "952:9:18"
              }
            ],
            "name": "claim",
            "nameLocation": "935:5:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "940:2:18"
            },
            "returnParameters": {
              "id": 2944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "962:0:18"
            },
            "scope": 2966,
            "src": "926:150:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2967,
        "src": "203:878:18",
        "usedErrors": []
      }
    ],
    "src": "33:1050:18"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/OGSale.sol",
    "exportedSymbols": {
      "Context": [
        2344
      ],
      "INordiaForFuture": [
        2619
      ],
      "OGSale": [
        2966
      ],
      "Ownable": [
        505
      ]
    },
    "id": 2967,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2857,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:18"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
        "file": "@openzeppelin/contracts/utils/Context.sol",
        "id": 2858,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2967,
        "sourceUnit": 2345,
        "src": "60:51:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2859,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2967,
        "sourceUnit": 506,
        "src": "113:52:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/INordiaForFuture.sol",
        "file": "./INordiaForFuture.sol",
        "id": 2860,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2967,
        "sourceUnit": 2620,
        "src": "167:32:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2861,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2344,
              "src": "222:7:18"
            },
            "id": 2862,
            "nodeType": "InheritanceSpecifier",
            "src": "222:7:18"
          },
          {
            "baseName": {
              "id": 2863,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 505,
              "src": "231:7:18"
            },
            "id": 2864,
            "nodeType": "InheritanceSpecifier",
            "src": "231:7:18"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2966,
        "linearizedBaseContracts": [
          2966,
          505,
          2344
        ],
        "name": "OGSale",
        "nameLocation": "212:6:18",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "d56d229d",
            "id": 2867,
            "mutability": "mutable",
            "name": "nftContract",
            "nameLocation": "276:11:18",
            "nodeType": "VariableDeclaration",
            "scope": 2966,
            "src": "252:35:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_INordiaForFuture_$2619",
              "typeString": "contract INordiaForFuture"
            },
            "typeName": {
              "id": 2866,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2865,
                "name": "INordiaForFuture",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2619,
                "src": "252:16:18"
              },
              "referencedDeclaration": 2619,
              "src": "252:16:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INordiaForFuture_$2619",
                "typeString": "contract INordiaForFuture"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ed47ef50",
            "id": 2871,
            "mutability": "mutable",
            "name": "claimCnts",
            "nameLocation": "333:9:18",
            "nodeType": "VariableDeclaration",
            "scope": 2966,
            "src": "300:42:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
              "typeString": "mapping(address => uint8)"
            },
            "typeName": {
              "id": 2870,
              "keyType": {
                "id": 2868,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "308:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "300:25:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                "typeString": "mapping(address => uint8)"
              },
              "valueType": {
                "id": 2869,
                "name": "uint8",
                "nodeType": "ElementaryTypeName",
                "src": "319:5:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "082b9a97",
            "id": 2874,
            "mutability": "constant",
            "name": "maxSaleCnt",
            "nameLocation": "374:10:18",
            "nodeType": "VariableDeclaration",
            "scope": 2966,
            "src": "350:41:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2872,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "350:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32303030",
              "id": 2873,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "387:4:18",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2000_by_1",
                "typeString": "int_const 2000"
              },
              "value": "2000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2877,
              "nodeType": "Block",
              "src": "412:10:18",
              "statements": []
            },
            "id": 2878,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "409:2:18"
            },
            "returnParameters": {
              "id": 2876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:0:18"
            },
            "scope": 2966,
            "src": "398:24:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2881,
              "nodeType": "Block",
              "src": "455:3:18",
              "statements": []
            },
            "id": 2882,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:2:18"
            },
            "returnParameters": {
              "id": 2880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "455:0:18"
            },
            "scope": 2966,
            "src": "428:30:18",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2895,
              "nodeType": "Block",
              "src": "524:58:18",
              "statements": [
                {
                  "expression": {
                    "id": 2893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2889,
                      "name": "nftContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2867,
                      "src": "535:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INordiaForFuture_$2619",
                        "typeString": "contract INordiaForFuture"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2891,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2884,
                          "src": "566:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2890,
                        "name": "INordiaForFuture",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2619,
                        "src": "549:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_INordiaForFuture_$2619_$",
                          "typeString": "type(contract INordiaForFuture)"
                        }
                      },
                      "id": 2892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "549:25:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INordiaForFuture_$2619",
                        "typeString": "contract INordiaForFuture"
                      }
                    },
                    "src": "535:39:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INordiaForFuture_$2619",
                      "typeString": "contract INordiaForFuture"
                    }
                  },
                  "id": 2894,
                  "nodeType": "ExpressionStatement",
                  "src": "535:39:18"
                }
              ]
            },
            "functionSelector": "a7ccabdf",
            "id": 2896,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2887,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2886,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 424,
                  "src": "514:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "514:9:18"
              }
            ],
            "name": "setNFTContract",
            "nameLocation": "473:14:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2884,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "496:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 2896,
                  "src": "488:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "488:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "487:17:18"
            },
            "returnParameters": {
              "id": 2888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:0:18"
            },
            "scope": 2966,
            "src": "464:118:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2939,
              "nodeType": "Block",
              "src": "627:291:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2900,
                              "name": "nftContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2867,
                              "src": "646:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INordiaForFuture_$2619",
                                "typeString": "contract INordiaForFuture"
                              }
                            },
                            "id": 2901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2618,
                            "src": "646:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 2902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "646:25:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32303030",
                          "id": 2903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "674:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000_by_1",
                            "typeString": "int_const 2000"
                          },
                          "value": "2000"
                        },
                        "src": "646:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53616c6520656e646564",
                        "id": 2905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "680:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b036694915d381e2a28fde2d675c29ae068907f000a010baf2c383f04c632766",
                          "typeString": "literal_string \"Sale ended\""
                        },
                        "value": "Sale ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b036694915d381e2a28fde2d675c29ae068907f000a010baf2c383f04c632766",
                          "typeString": "literal_string \"Sale ended\""
                        }
                      ],
                      "id": 2899,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "638:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "638:55:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2907,
                  "nodeType": "ExpressionStatement",
                  "src": "638:55:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 2914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 2909,
                            "name": "claimCnts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2871,
                            "src": "712:9:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                              "typeString": "mapping(address => uint8)"
                            }
                          },
                          "id": 2912,
                          "indexExpression": {
                            "expression": {
                              "id": 2910,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "722:3:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2911,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "722:10:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "712:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 2913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "736:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "712:25:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792032206e66747320617661696c61626c65207065722077616c6c6574",
                        "id": 2915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "739:34:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d64f1b4388cc5526fe9f22947da24732c56df9e0147c10c0b6e9a1c7036a2b1a",
                          "typeString": "literal_string \"Only 2 nfts available per wallet\""
                        },
                        "value": "Only 2 nfts available per wallet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d64f1b4388cc5526fe9f22947da24732c56df9e0147c10c0b6e9a1c7036a2b1a",
                          "typeString": "literal_string \"Only 2 nfts available per wallet\""
                        }
                      ],
                      "id": 2908,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "704:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "704:70:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2917,
                  "nodeType": "ExpressionStatement",
                  "src": "704:70:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2919,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "793:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "793:9:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "302e303735",
                          "id": 2921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "806:11:18",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_75000000000000000_by_1",
                            "typeString": "int_const 75000000000000000"
                          },
                          "value": "0.075"
                        },
                        "src": "793:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820657468",
                        "id": 2923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "819:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d96abdcb6718598615af5856d39e67f33acef28010b2252b4f055b6cfebd761",
                          "typeString": "literal_string \"Not enough eth\""
                        },
                        "value": "Not enough eth"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d96abdcb6718598615af5856d39e67f33acef28010b2252b4f055b6cfebd761",
                          "typeString": "literal_string \"Not enough eth\""
                        }
                      ],
                      "id": 2918,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "785:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "785:51:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2925,
                  "nodeType": "ExpressionStatement",
                  "src": "785:51:18"
                },
                {
                  "expression": {
                    "id": 2930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "847:24:18",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2926,
                        "name": "claimCnts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2871,
                        "src": "847:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 2929,
                      "indexExpression": {
                        "expression": {
                          "id": 2927,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "857:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "857:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "847:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2931,
                  "nodeType": "ExpressionStatement",
                  "src": "847:24:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2935,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "899:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "899:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2932,
                        "name": "nftContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2867,
                        "src": "882:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_INordiaForFuture_$2619",
                          "typeString": "contract INordiaForFuture"
                        }
                      },
                      "id": 2934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2613,
                      "src": "882:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "882:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2938,
                  "nodeType": "ExpressionStatement",
                  "src": "882:28:18"
                }
              ]
            },
            "functionSelector": "5ae2afa4",
            "id": 2940,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimNft",
            "nameLocation": "599:8:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "607:2:18"
            },
            "returnParameters": {
              "id": 2898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "627:0:18"
            },
            "scope": 2966,
            "src": "590:328:18",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2964,
              "nodeType": "Block",
              "src": "962:114:18",
              "statements": [
                {
                  "assignments": [
                    2946,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2946,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "979:7:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 2964,
                      "src": "974:12:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2945,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "974:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 2961,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 2959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1047:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2949,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1000:3:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1000:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "992:8:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 2947,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "992:8:18",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "992:19:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 2952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "992:24:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 2958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2955,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1032:4:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OGSale_$2966",
                                  "typeString": "contract OGSale"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OGSale_$2966",
                                  "typeString": "contract OGSale"
                                }
                              ],
                              "id": 2954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1024:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2953,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1024:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1024:13:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1024:21:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "992:54:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 2960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "992:58:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "973:77:18"
                },
                {
                  "expression": {
                    "id": 2962,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2946,
                    "src": "1061:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2963,
                  "nodeType": "ExpressionStatement",
                  "src": "1061:7:18"
                }
              ]
            },
            "functionSelector": "4e71d92d",
            "id": 2965,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2943,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2942,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 424,
                  "src": "952:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "952:9:18"
              }
            ],
            "name": "claim",
            "nameLocation": "935:5:18",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "940:2:18"
            },
            "returnParameters": {
              "id": 2944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "962:0:18"
            },
            "scope": 2966,
            "src": "926:150:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2967,
        "src": "203:878:18",
        "usedErrors": []
      }
    ],
    "src": "33:1050:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-07-12T06:13:15.442Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}